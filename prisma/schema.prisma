// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  // NOTE: When using postgresql, mysql or sqlserver, uncomment the @db.Text annotations in model Account below
  // Further reading:
  // https://next-auth.js.org/adapters/prisma#create-the-prisma-schema
  // https://www.prisma.io/docs/reference/api-reference/prisma-schema-reference#string
  url      = env("DATABASE_URL")
}

model Example {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// Necessary for Next auth
model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String      @id @default(cuid())
  name          String?
  email         String?     @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  rank          Rank        @default(Bronze)
  rating        Rating?
  ratingId      String?
  ratingInt     Float?
  wins          Int?        @default(0)
  losses        Int?        @default(0)
  winRate       Int?        @default(0)
  hostedMatches Match[]     @relation("hostedMatches")
  joinedMatches Match[]     @relation("joinedMatches")
  role          Role        @default(USER)
  twitter       String?
  twitch        String?
  startgg       String?
  pronouns      String?
  mains         Character[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Match {
  id            String     @id @default(cuid())
  region        Region     @default(PNW)
  ranked        Boolean    @default(false)
  bestOf        BestOf     @default(FREE)
  ongoing       Boolean    @default(true)
  host          User       @relation(name: "hostedMatches", fields: [hostId], references: [id])
  guest         User?      @relation(name: "joinedMatches", fields: [guestId], references: [id])
  hostId        String
  guestId       String?
  hostName      String?
  guestName     String?
  joinable      Boolean    @default(true)
  hostScore     Int        @default(0)
  guestScore    Int        @default(0)
  hostCharacter Character?
  rounds        Round[]
  disputed      Boolean    @default(false)
  completed     Boolean    @default(false)
  created       DateTime   @default(now())
  arenaId       String
  arenaPw       String
}

model Round {
  id          String     @id @default(cuid())
  match       Match      @relation(fields: [matchId], references: [id])
  matchId     String
  hostChar    Character?
  guestChar   Character?
  ban1        Stage?
  ban2        Stage?
  ban3        Stage?
  stage       Stage?
  roundNumber Int        @default(1)
  complete    Boolean    @default(false)
  hostVote    String?
  guestVote   String?
  winner      String?
  bansFirst   BansFirst  @default(HOST)
}

model Rating {
  id      String @id @default(cuid())
  user    User   @relation(fields: [userId], references: [id])
  userId  String @unique
  mu      Float
  sigma   Float
  ordinal Float
}

//ENUMS

enum Role {
  USER
  MODERATOR
}

enum BansFirst {
  HOST
  GUEST
}

enum Winner {
  HOST
  GUEST
  NONE
  DISPUTE
}

enum Rank {
  Bronze
  Silver
  Gold
  Platinum
  Diamond
  Masters
}

enum BestOf {
  THREE
  FIVE
  FREE
}

enum Region {
  PNW
}

enum Stage {
  BF
  SBF
  FD
  PS2
  SV
  HB
  TC
  KALOS
}

enum Character {
  RANDOM
  MARIO
  DONKEYKONG
  LINK
  SAMUS
  DARKSAMUS
  YOSHI
  KIRBY
  FOX
  PIKACHU
  LUIGI
  NESS
  CAPTAINFALCON
  JIGGLYPUFF
  PEACH
  DAISY
  BOWSER
  ICECLIMBERS
  SHEIK
  ZELDA
  DRMARIO
  PICHU
  FALCO
  MARTH
  LUCINA
  YOUNGLINK
  GANONDORF
  MEWTWO
  ROY
  CHROM
  GNW
  METAKNIGHT
  PIT
  DARKPIT
  ZSS
  WARIO
  SNAKE
  IKE
  PT
  DIDDYKONG
  LUCAS
  SONIC
  DDD
  OLIMAR
  LUCARIO
  ROB
  TOONLINK
  WOLF
  VILLAGER
  MEGAMAN
  WIIFIT
  ROSALINA
  LITTLEMAC
  GRENINJA
  BRAWLER
  SWORDFIGHTER
  GUNNER
  PALUTENA
  PACMAN
  ROBIN
  SHULK
  BOWSERJR
  DUCKHUNT
  RYU
  KEN
  CLOUD
  CORRIN
  BAYONETTA
  INKING
  RIDLEY
  SIMON
  RICHTER
  KROOL
  ISABELLE
  INCINEROAR
  PLANT
  JOKER
  HERO
  BANJO
  TERRY
  BYLETH
  MINMIN
  STEVE
  SEPHIROTH
  AEGIS
  KAZUYA
  SORA
}
